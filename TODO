* documentation:
  - Pages need to explain what the hell they do
    = Help link somewhere?
  - api_updater deprecated
  - http://www.readthedocs.org/

* features:
  - Industry jobs:
    = Events for job installation/completion/etc
    = Some sort of success rate tracker for invention?
  - Wallet journal:
    = ISK per hour graph for mission rewards/rat bounties/etc
    = Corporation graph too?
  - Email warnings
    = Let user configure email address (save to auth_user email field?)
      # Implement email verification because people are idiots
    = Configurable:
      # Frequency (once, hourly, daily)
        % Will need another damn new database model to store events that have been issued
      # Things to email about (insufficient clone, room in skill queue, account not in training, account time <10 days)

* misc:
  - Implement proper APIKey access_mask checks:
    = User A has a full (all masks) key for account 'example'
    = User B has a minimal (say, basic character info only) key for account 'example'
    = User B can actually see all data related to this account, even though their APIKey.access_mask is much more limited
    = Will require modifying all view code to use .extra() and a binary AND on the access_mask field, ugh
      # apikey.get_masks() and comparing the list to apikey.foo_MASK maybe? Possibly slow.

* tasks:
  - Make SystemEvent objects for admin-related events

* tasks.api_key_info:
  - When a key is successfully updated, check the APICache for any 221 "derp check access" errors. If any are found, purge
    them from the cache and also the related TaskState object.

* tasks.price_updater:
  - Add support for other sources of market data (EVE-Central, EVEMarketData?)

* tasks.ref_types:
  - Port from import.py, timer?

* tests:
  - Check that all page views return a correct OK/KABOOM response.
  - Check that database modification views (account, blueprints, etc) do what they should.
  - Check model calculations (skill completion, blueprint calculations, etc).

* views.account:
  - Move Event Log to this page
  - Add a way to create Campaign objects
  - API Keys:
    = Warn when a key doesn't have the required mask to pull AccountStatus (game time warnings)
    = Display "data for this key has not yet been pulled" instead of just NONE NONE NONE
    = Explain how API data is pulled
    = Some way to see last pull/next pull time for each API call related to a key
  - Implement skill plan creation (hahahaha oh god)
    = Use AJAX and modal windows for add/delete/re-order?
    = Step 1: basic adding of skills with pre-requisites
    = Step 2: deletion of skills with pre-requisites and a useful "are you sure?" prompt
    = Step 3: re-ordering of entries
      # Basic updating - if you move position 32 to position 2, you can update that in two queries:
        % UPDATE thing_entry SET position = position + 1 WHERE skillplan_id = n AND (position >= 2 AND position <= 1)
        % UPDATE thing_entry SET position = 2 WHERE id = n
      # Complex updating - deal with pre-requisites, urgh

* views.assets:
  - Improve search features:
    = Types:
      # Value
      # Total value
      # Containers only toggle?
      # Item group
      # Station name
      # System name
    = Magical JS buttons to add/remove extra search filters
      # Steal from successful Wallet Journal implementation

* views.blueprints:
  - Work out a sane way to be able to say "I want to make 100 Blackbirds and 300 rigs to go on them" and get
    a BPCalc summary page out of it.
  - Profitability dumping to buys instead of using sells?

* views.character:
  - Make categories expandable/collapsible
  - Expand all/collapse all JavaScript links
  - Standings tab needs agent standings
  - Ability to see a post-skill-plan character sheet?
  - Add employment history
  - Skill tooltips:
    = Should display training time for each further level

* views.contracts:
  - Summary table similar to orders

* views.home:
  - Add options to hide corp wallet/event log sections

* views.market_scan:
  - Add different scan types (assets+blueprints can take forever):
    = Assets
    = Blueprints
    = [All]
